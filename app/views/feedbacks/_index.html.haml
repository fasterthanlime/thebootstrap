- feedbacks.each do |f|
  .feedback
    - if f.user.id == @_current_user.id || @_current_user.admin == true
      .delete
        = link_to "/events/#{event.id}/feedbacks/#{f.id}", :method => :delete, :class => :admin do
          %span.symbol h
          Delete feedback

    %strong
      %span.symbol.big c
      feedback
    from
    %a(href="https://twitter.com/#{f.user.nick}")= "@#{f.user.nick}"
    %span(title="#{f.created_at.localtime.to_formatted_s(:long_ordinal)}")
      = distance_of_time_in_words_to_now(f.created_at)
    ago

    %p
      = raw(markup(f.content))
    - if not f.url.nil? and not f.url.empty?
      %p
        %a(href="#{f.url}" class='url')
          - uri = URI(f.url).normalize
          %img(src="http://getfavicon.appspot.com/#{f.url}")
          #{uri.host}#{uri.path}
    .clear

%h3 Post feedback

= form_tag("/events/#{event.id}/feedbacks", :class => 'feedback') do
  %strong
    %span.symbol.big c
    feedback
  from
  %a(href="https://twitter.com/#{@_current_user.nick}")= "@#{@_current_user.nick}"
  right now!

  %p
    = text_area_tag 'content', '', :placeholder => 'something about this event'

  %p
    = text_field_tag 'url', '', :placeholder => 'http://...'

  %a(href='#' class='button' onclick='$(this).closest("form").submit(); return false;')
    %span.symbol c
    Post feedback

  %p.note
    Hint:
    %a(href="http://daringfireball.net/projects/markdown/syntax") markdown
    is supported
